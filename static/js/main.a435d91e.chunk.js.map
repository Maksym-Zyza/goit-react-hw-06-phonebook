{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","App.module.css","redux/contacts/contacts-types.js","components/Filter/Filter.jsx","redux/contacts/contacts-actions.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","App.js","redux/counter/counter-types.js","redux/counter/counter-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","types","ADD","DELETE","FILTER","connect","state","value","contacts","filter","dispatch","onChange","e","target","type","payload","className","style","wrapper","label","name","input","contactListFilter","items","console","log","toLowerCase","includes","onDelBtnClick","id","actions","map","contact","listItem","namber","number","btn","onClick","event","ContactForm","handelChange","currentTarget","setState","uuidv4","resetForm","handleSabmit","preventDefault","props","onSubmit","form","autoComplete","this","Component","obj","title","subtitle","length","INCREMENT","DECREMENT","counterReducer","combineReducers","actionTypes","step","rootReducer","counter","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a435d91e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"name\":\"Filter_name__pSTfl\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\",\"name\":\"ContactList_name__2WLgA\",\"namber\":\"ContactList_namber__xUfTY\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"title\":\"App_title__-GfWs\",\"subtitle\":\"App_subtitle__2-DpX\"};","const types = {\n  ADD: 'Contact/add',\n  DELETE: 'Contact/delete',\n  FILTER: 'Contact/filter',\n};\n\nexport default types;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.wrapper}>\n      <label className={style.label}>\n        <span className={style.name}>Find contacts by name</span>\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = PropTypes.shape({\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}).isRequired;\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import types from './contacts-types';\n\nexport const addContact = obj => ({\n  type: types.ADD,\n  payload: { ...obj },\n});\n\nexport const deleteContact = id => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nexport const filterContacts = value => ({\n  type: types.FILTER,\n  payload: value,\n});\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDelBtnClick }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} className={style.listItem}>\n          <span className={style.name}>{contact.name}:</span>\n          <span className={style.namber}>{contact.number}</span>\n          <button\n            className={style.btn}\n            type=\"button\"\n            id={contact.id}\n            onClick={event => onDelBtnClick(event.target.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n  onDelBtnClick: PropTypes.func.isRequired,\n}).isRequired;\n\nconst contactListFilter = (items, filter) => {\n  console.log(items);\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: contactListFilter(items, filter),\n});\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items,\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  onDelBtnClick: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handelChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value, id: uuidv4() });\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleSabmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit({ name, number, id: uuidv4() });\n    this.resetForm();\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <form\n            className={style.form}\n            autoComplete=\"off\"\n            onSubmit={this.handleSabmit}\n          >\n            <label className={style.label}>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handelChange}\n                className={style.input}\n              />\n            </label>\n            <label className={style.label}>\n              Number:\n              <input\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                onChange={this.handelChange}\n                className={style.input}\n              />\n            </label>\n            <button type=\"submit\" className={style.btn}>\n              Add contact\n            </button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: obj => dispatch(actions.addContact(obj)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\n// import Counter from './components/Counter';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport style from './App.module.css';\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => {\n  // state = {\n  //   contacts: [],\n  //   filter: '',\n  // };\n\n  // submitHandler = contactObj => {\n  //   console.log(contactObj);\n  //   if (this.state.contacts.some(({ name }) => name === contactObj.name)) {\n  //     return alert(`${contactObj.name} is already in contacts.`);\n  //   }\n  //   this.setState(prevState => {\n  //     return {\n  //       contacts: [...prevState.contacts, contactObj],\n  //     };\n  //   });\n  // };\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsContacts = JSON.parse(contacts);\n\n  //   if (parsContacts) {\n  //     this.setState({ contacts: parsContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  return (\n    <div className={style.wrapper}>\n      {/* <h1 className={style.title}>Counter</h1>\n        <Counter /> */}\n\n      <h1 className={style.title}>Phonebook</h1>\n      <ContactForm\n      // onSubmit={this.submitHandler}\n      />\n\n      <h2 className={style.subtitle}>Contacts</h2>\n      {contacts.length > 1 && (\n        <Filter\n        // initialValue={filter}\n        // onFilterChange={this.changeFilterHandler}\n        />\n      )}\n      {\n        <ContactList\n        // contacts={filteredContactList}\n        // onDelBtnClick={this.contactDeleteHandler}\n        />\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(App);\n","export const INCREMENT = 'counter/Increment';\nexport const DECREMENT = 'counter/Decrement';\n","import { combineReducers } from 'redux';\nimport * as actionTypes from './counter-types';\n\nconst valueReduser = (state = 100, { type, payload }) => {\n  switch (type) {\n    case actionTypes.INCREMENT:\n      return state + payload;\n\n    case actionTypes.DECREMENT:\n      return state - payload;\n\n    default:\n      return state;\n  }\n};\n\nconst stepReduser = (state = 10, action) => state;\n\nconst counterReducer = combineReducers({\n  value: valueReduser,\n  step: stepReduser,\n});\n\nexport default counterReducer;\n","import { combineReducers } from 'redux';\nimport types from './contacts-types';\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter(contact => contact.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport counterReducer from './counter/counter-reducer';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}